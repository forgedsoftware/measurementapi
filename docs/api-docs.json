{
	"swagger": "2.0",
	"info": {
		"title": "Measurement API",
		"description": "Measurement API provides functionality for unit conversion and manipulating dimensions. Documentation of each endpoint is provided below.\r\n\r\n### Features\r\n- Find/discover functionality for units, dimensions, measurement systems, and prefixes.\r\n- Conversion functionality of an amount between two unit types.\r\n\r\n### Technical Details\r\n\r\n#### Versioning\r\n- This documentation details the latest version of API. Older versions are undocumented but do exist.\r\n- For existing versions see the ```/versions``` endpoint.\r\n- This API supports explicit URL versioning and accept header versioning.\r\n  - URL - Prefix the url with ```/v``` + ```number```, for example:  ```/v0/endpoint/here```. Omit the prefix for the latest version.\r\n  - Accept Header - Omit the prefix from the URL and add an accept header in the form ```application/vnd.measurement.v0+json```. The version in the first mime type specified is used. If the version is specified in the URL, the version in the accept header is ignored. Unknown versions are also ignored.\r\n\r\n#### Usage Limits\r\n- Usage limits exist per IP address.\r\n- Users are allowed an hourly max of 500 requests.\r\n- Users are allowed a burst max of 50 requests in a 2 minute interval.\r\n- See ```/status``` for your current usage details.\r\n- If you wish to have a higher limit, please contact us.\r\n\r\n#### Accept Header Mime-Types\r\n- The default return type when no headers are specified is JSON (```application/json```).\r\n- This API accepts ```application/json``` and ```application/xml``` (or ```text/xml``` if you prefer).\r\n- Vender accept headers may be used in the form ```application/vnd.measurement.v1+json``` if desired.",
		"version": "1.0",
		"contact": {
			"name": "Forged Software",
			"url": "http://www.forgedsoftware.com",
			"email": "contact@forgedsoftware.com"
		},
		"license": {
			"name": "MIT License",
			"url": "https://github.com/forgedsoftware/measurementapi/blob/master/LICENSE"
		}
	},
	"consumes": ["application/json", "application/xml", "application/vnd.measurement+json", "application/vnd.measurement+xml"],
	"produces": ["application/json", "application/xml"],
	"host": "localhost:8080",
	"basePath": "/",
	"paths": {
		"/dimensions": {
			"get": {
				"summary": "Returns all dimension keys",
				"description": "Returns the dimension keys for all known dimensions.",
				"produces": ["application/json", "application/xml"],
				"operationId": "getDimensionKeys",
				"tags": ["discover keys"],
				"responses": {
					"200": {
						"description": "Keys of all dimensions",
						"schema": {
							"type": "array",
							"items": {
								"type": "string"
							}
						}
					}
				}
			}
		},
		"/units/{dimensionKey}": {
			"get": {
				"summary": "Returns all unit keys in dimension",
				"description": "Returns all of the unit keys for a specific dimension.",
				"produces": ["application/json", "application/xml"],
				"operationId": "getUnitKeys",
				"tags": ["discover keys"],
				"parameters": [{
					"name": "dimensionKey",
					"description": "Dimension key to reference",
					"in": "path",
					"required": true,
					"type": "string",
					"default": "time"
				}],
				"responses": {
					"200": {
						"description": "Keys of all units in dimension",
						"schema": {
							"type": "array",
							"items": {
								"type": "string"
							}
						}
					}
				}
			}
		},
		"/dimension/{dimensionKey}": {
			"get": {
				"summary": "Returns details on a specified dimension",
				"description": "Returns all of the details of a specific dimension.",
				"produces": ["application/json", "application/xml"],
				"operationId": "getDimension",
				"tags": ["discover entities"],
				"parameters": [{
					"name": "dimensionKey",
					"description": "Dimension key to reference",
					"in": "path",
					"required": true,
					"type": "string",
					"default": "time"
				}],
				"responses": {
					"200": {
						"description": "Dimension details",
						"schema": {
							"$ref": "#/definitions/Dimension"
						}
					}
				}
			}
		},
		"/unit/{dimensionKey}/{unitKey}": {
			"get": {
				"summary": "Returns details on a specified unit",
				"description": "Returns all of the details of a specific unit.",
				"produces": ["application/json", "application/xml"],
				"operationId": "getUnit",
				"tags": ["discover entities"],
				"parameters": [{
					"name": "dimensionKey",
					"description": "Dimension key which contains the unit",
					"in": "path",
					"required": true,
					"type": "string",
					"default": "time"
				}, {
					"name": "unitKey",
					"description": "Key of unit to be fetched",
					"in": "path",
					"required": true,
					"type": "string",
					"default": "second"
				}],
				"responses": {
					"200": {
						"description": "Unit details",
						"schema": {
							"$ref": "#/definitions/Unit"
						}
					}
				}
			}
		}
	},
	"definitions": {
		"Dimension": {
			"type": "object",
			"required": ["name", "baseUnit", "units"],
			"properties": {
				"name": {
					"type": "string"
				},
				"otherNames": {
					"type": "array",
					"items": {
						"type": "string"
					}
				},
				"baseUnit": {
					"type": "string"
				},
				"units": {
					"type": "array",
					"items": {
						
					}
				},
				"vector": {
					"type": "boolean"
				}
			}
		},
		"Unit": {
			"type": "object",
			"required": ["name", "type"],
			"properties": {
				"name": {
					"type": "string",
					"description": "Name of the unit"
				},
				"plural": {
					"type": "string",
					"description": "Plural name of the unit"
				},
				"otherNames": {
					"type": "array",
					"description": "Other names of the unit",
					"items": {
						"type": "string"
					}
				},
				"otherSymbols": {
					"type": "array",
					"description": "Other symbols of the unit",
					"items": {
						"type": "string"
					}
				},
				"symbol": {
					"type": "string",
					"description": "Symbol of the unit"
				},
				"type": {
					"type": "string",
					"description": "Type of the unit"
				},
				"systems": {
					"type": "array",
					"description": "Keys of the systems the unit belongs to",
					"items": {
						"type": "string"
					}
				},
				"tags": {
					"type": "array",
					"description": "Tags that apply to the unit",
					"items": {
						"type": "string"
					}
				},
				"notes": {
					"type": "string",
					"description": "Notes on the unit"
				}
			}
		}
	}
}